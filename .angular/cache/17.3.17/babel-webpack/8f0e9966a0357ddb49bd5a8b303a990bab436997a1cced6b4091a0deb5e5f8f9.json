{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet EmployeesComponent = class EmployeesComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.employeeResult = {\n      data: [],\n      totalItems: 0,\n      currentPage: 1,\n      pageSize: 20,\n      totalPages: 0\n    };\n    this.departments = [];\n    this.showAddForm = false;\n    this.showEditForm = false;\n    this.editingEmployee = null;\n    this.currentEmployee = this.getEmptyEmployee();\n    this.searchCriteria = {\n      searchTerm: '',\n      departmentId: '',\n      status: ''\n    };\n  }\n  ngOnInit() {\n    this.departments = this.dataService.getAllDepartments();\n    this.loadEmployees();\n  }\n  getEmptyEmployee() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      departmentId: '',\n      position: '',\n      salary: 0,\n      hireDate: new Date(),\n      status: 'Active',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zipCode: ''\n      }\n    };\n  }\n  loadEmployees() {\n    this.employeeResult = this.dataService.searchEmployees(this.searchCriteria, this.employeeResult.currentPage, this.employeeResult.pageSize);\n  }\n  performSearch() {\n    this.employeeResult.currentPage = 1;\n    this.loadEmployees();\n  }\n  clearSearch() {\n    this.searchCriteria = {\n      searchTerm: '',\n      departmentId: '',\n      status: ''\n    };\n    this.performSearch();\n  }\n  goToPage(page) {\n    if (page >= 1 && page <= this.employeeResult.totalPages) {\n      this.employeeResult.currentPage = page;\n      this.loadEmployees();\n    }\n  }\n  getPageNumbers() {\n    const totalPages = this.employeeResult.totalPages;\n    const current = this.employeeResult.currentPage;\n    const pages = [];\n    const start = Math.max(1, current - 2);\n    const end = Math.min(totalPages, current + 2);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n  editEmployee(employee) {\n    this.editingEmployee = employee;\n    this.currentEmployee = {\n      ...employee,\n      address: {\n        ...employee.address\n      }\n    };\n    this.showEditForm = true;\n  }\n  deleteEmployee(employee) {\n    if (confirm(`Are you sure you want to delete ${employee.firstName} ${employee.lastName}?`)) {\n      this.dataService.deleteEmployee(employee.id);\n      this.loadEmployees();\n    }\n  }\n  saveEmployee() {\n    // Ensure address is properly initialized\n    if (!this.currentEmployee.address) {\n      this.currentEmployee.address = {\n        street: '',\n        city: '',\n        state: '',\n        zipCode: ''\n      };\n    }\n    if (this.editingEmployee) {\n      this.dataService.updateEmployee(this.editingEmployee.id, this.currentEmployee);\n    } else {\n      this.dataService.createEmployee(this.currentEmployee);\n    }\n    this.closeForm();\n    this.loadEmployees();\n  }\n  closeForm() {\n    this.showAddForm = false;\n    this.showEditForm = false;\n    this.editingEmployee = null;\n    this.currentEmployee = this.getEmptyEmployee();\n  }\n  getDepartmentName(departmentId) {\n    const department = this.departments.find(dept => dept.id === departmentId);\n    return department ? department.name : 'Unknown';\n  }\n  formatDateForInput(date) {\n    if (!date) return '';\n    const d = new Date(date);\n    return d.toISOString().split('T')[0];\n  }\n  parseDate(dateString) {\n    return new Date(dateString);\n  }\n};\nEmployeesComponent = __decorate([Component({\n  selector: 'app-employees',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"employee-management\">\n      <div class=\"header-section\">\n        <h1>Employee Management</h1>\n        <button class=\"btn btn-primary\" (click)=\"showAddForm = true\">Add New Employee</button>\n      </div>\n\n      <!-- Search Section -->\n      <div class=\"search-section\">\n        <div class=\"search-controls\">\n          <input\n            type=\"text\"\n            placeholder=\"Search employees...\"\n            [(ngModel)]=\"searchCriteria.searchTerm\"\n            (input)=\"performSearch()\"\n            class=\"search-input\"\n          >\n          <select [(ngModel)]=\"searchCriteria.departmentId\" (change)=\"performSearch()\" class=\"search-select\">\n            <option value=\"\">All Departments</option>\n            <option *ngFor=\"let dept of departments\" [value]=\"dept.id\">{{dept.name}}</option>\n          </select>\n          <select [(ngModel)]=\"searchCriteria.status\" (change)=\"performSearch()\" class=\"search-select\">\n            <option value=\"\">All Statuses</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Inactive\">Inactive</option>\n            <option value=\"On Leave\">On Leave</option>\n          </select>\n          <button class=\"btn btn-secondary\" (click)=\"clearSearch()\">Clear</button>\n        </div>\n      </div>\n\n      <!-- Add/Edit Form Modal -->\n      <div class=\"modal\" *ngIf=\"showAddForm || showEditForm\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h3>{{editingEmployee ? 'Edit Employee' : 'Add New Employee'}}</h3>\n            <button class=\"close-btn\" (click)=\"closeForm()\">&times;</button>\n          </div>\n          <form (ngSubmit)=\"saveEmployee()\" #employeeForm=\"ngForm\" class=\"employee-form\">\n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  [(ngModel)]=\"currentEmployee.firstName\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  [(ngModel)]=\"currentEmployee.lastName\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email *</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  [(ngModel)]=\"currentEmployee.email\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  [(ngModel)]=\"currentEmployee.phone\"\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label for=\"departmentId\">Department *</label>\n                <select\n                  id=\"departmentId\"\n                  name=\"departmentId\"\n                  [(ngModel)]=\"currentEmployee.departmentId\"\n                  required\n                  class=\"form-input\"\n                >\n                  <option value=\"\">Select Department</option>\n                  <option *ngFor=\"let dept of departments\" [value]=\"dept.id\">{{dept.name}}</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"position\">Position *</label>\n                <input\n                  type=\"text\"\n                  id=\"position\"\n                  name=\"position\"\n                  [(ngModel)]=\"currentEmployee.position\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label for=\"salary\">Salary *</label>\n                <input\n                  type=\"number\"\n                  id=\"salary\"\n                  name=\"salary\"\n                  [(ngModel)]=\"currentEmployee.salary\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"status\">Status *</label>\n                <select\n                  id=\"status\"\n                  name=\"status\"\n                  [(ngModel)]=\"currentEmployee.status\"\n                  required\n                  class=\"form-input\"\n                >\n                  <option value=\"Active\">Active</option>\n                  <option value=\"Inactive\">Inactive</option>\n                  <option value=\"On Leave\">On Leave</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label for=\"hireDate\">Hire Date *</label>\n                <input\n                  type=\"date\"\n                  id=\"hireDate\"\n                  name=\"hireDate\"\n                  [ngModel]=\"formatDateForInput(currentEmployee.hireDate)\"\n                  (ngModelChange)=\"currentEmployee.hireDate = parseDate($event)\"\n                  required\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"address-section\">\n              <h4>Address</h4>\n              <div class=\"form-row\">\n                <div class=\"form-group full-width\">\n                  <label for=\"street\">Street</label>\n                  <input\n                    type=\"text\"\n                    id=\"street\"\n                    name=\"street\"\n                    [(ngModel)]=\"currentEmployee.address?.street\"\n                    class=\"form-input\"\n                  >\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group\">\n                  <label for=\"city\">City</label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    [(ngModel)]=\"currentEmployee.address?.city\"\n                    class=\"form-input\"\n                  >\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"state\">State</label>\n                  <input\n                    type=\"text\"\n                    id=\"state\"\n                    name=\"state\"\n                    [(ngModel)]=\"currentEmployee.address?.state\"\n                    class=\"form-input\"\n                  >\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"zipCode\">Zip Code</label>\n                  <input\n                    type=\"text\"\n                    id=\"zipCode\"\n                    name=\"zipCode\"\n                    [(ngModel)]=\"currentEmployee.address?.zipCode\"\n                    class=\"form-input\"\n                  >\n                </div>\n              </div>\n            </div>\n            <div class=\"form-actions\">\n              <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeForm()\">Cancel</button>\n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!employeeForm.form.valid\">\n                {{editingEmployee ? 'Update' : 'Create'}}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <!-- Employee List -->\n      <div class=\"employee-list\">\n        <div class=\"list-header\">\n          <span>Found {{employeeResult.totalItems}} employee(s)</span>\n          <span>Page {{employeeResult.currentPage}} of {{employeeResult.totalPages}}</span>\n        </div>\n\n        <div class=\"employee-table\">\n          <div class=\"table-header\">\n            <div class=\"col-name\">Name</div>\n            <div class=\"col-email\">Email</div>\n            <div class=\"col-department\">Department</div>\n            <div class=\"col-position\">Position</div>\n            <div class=\"col-status\">Status</div>\n            <div class=\"col-actions\">Actions</div>\n          </div>\n          \n          <div class=\"table-row\" *ngFor=\"let employee of employeeResult.data\">\n            <div class=\"col-name\">{{employee.firstName}} {{employee.lastName}}</div>\n            <div class=\"col-email\">{{employee.email}}</div>\n            <div class=\"col-department\">{{getDepartmentName(employee.departmentId)}}</div>\n            <div class=\"col-position\">{{employee.position}}</div>\n            <div class=\"col-status\">\n              <span class=\"status-badge\" [ngClass]=\"'status-' + employee.status.toLowerCase().replace(' ', '-')\">\n                {{employee.status}}\n              </span>\n            </div>\n            <div class=\"col-actions\">\n              <button class=\"btn btn-sm btn-primary\" (click)=\"editEmployee(employee)\">Edit</button>\n              <button class=\"btn btn-sm btn-danger\" (click)=\"deleteEmployee(employee)\">Delete</button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Pagination -->\n        <div class=\"pagination\" *ngIf=\"employeeResult.totalPages > 1\">\n          <button\n            class=\"btn btn-secondary\"\n            [disabled]=\"employeeResult.currentPage === 1\"\n            (click)=\"goToPage(employeeResult.currentPage - 1)\"\n          >\n            Previous\n          </button>\n          \n          <span class=\"page-numbers\">\n            <button\n              *ngFor=\"let page of getPageNumbers()\"\n              class=\"btn btn-page\"\n              [ngClass]=\"{'active': page === employeeResult.currentPage}\"\n              (click)=\"goToPage(page)\"\n            >\n              {{page}}\n            </button>\n          </span>\n          \n          <button\n            class=\"btn btn-secondary\"\n            [disabled]=\"employeeResult.currentPage === employeeResult.totalPages\"\n            (click)=\"goToPage(employeeResult.currentPage + 1)\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .employee-management {\n      padding: 1rem;\n    }\n\n    .header-section {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 2rem;\n    }\n\n    .search-section {\n      margin-bottom: 2rem;\n      padding: 1rem;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n    }\n\n    .search-controls {\n      display: flex;\n      gap: 1rem;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n\n    .search-input, .search-select {\n      padding: 0.5rem;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      font-size: 0.9rem;\n    }\n\n    .search-input {\n      flex: 1;\n      min-width: 200px;\n    }\n\n    .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      padding: 0;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      max-height: 90vh;\n      overflow-y: auto;\n    }\n\n    .modal-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem;\n      border-bottom: 1px solid #eee;\n    }\n\n    .close-btn {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      cursor: pointer;\n      color: #666;\n    }\n\n    .employee-form {\n      padding: 1rem;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n    }\n\n    .form-group {\n      flex: 1;\n    }\n\n    .form-group.full-width {\n      flex: 100%;\n    }\n\n    .form-group label {\n      display: block;\n      margin-bottom: 0.5rem;\n      font-weight: bold;\n      color: #333;\n    }\n\n    .form-input {\n      width: 100%;\n      padding: 0.5rem;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      font-size: 1rem;\n    }\n\n    .address-section {\n      margin: 1.5rem 0;\n      padding: 1rem;\n      background-color: #f8f9fa;\n      border-radius: 4px;\n    }\n\n    .address-section h4 {\n      margin: 0 0 1rem 0;\n      color: #2c3e50;\n    }\n\n    .form-actions {\n      display: flex;\n      gap: 1rem;\n      justify-content: flex-end;\n      margin-top: 2rem;\n      padding-top: 1rem;\n      border-top: 1px solid #eee;\n    }\n\n    .employee-list {\n      background: white;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .list-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem;\n      border-bottom: 1px solid #eee;\n      background-color: #f8f9fa;\n    }\n\n    .employee-table {\n      overflow-x: auto;\n    }\n\n    .table-header, .table-row {\n      display: grid;\n      grid-template-columns: 2fr 2fr 1.5fr 1.5fr 1fr 1.5fr;\n      gap: 1rem;\n      padding: 1rem;\n      align-items: center;\n    }\n\n    .table-header {\n      background-color: #f8f9fa;\n      font-weight: bold;\n      border-bottom: 2px solid #dee2e6;\n    }\n\n    .table-row {\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .table-row:hover {\n      background-color: #f8f9fa;\n    }\n\n    .status-badge {\n      padding: 0.25rem 0.5rem;\n      border-radius: 4px;\n      font-size: 0.8rem;\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n\n    .status-active {\n      background-color: #d4edda;\n      color: #155724;\n    }\n\n    .status-inactive {\n      background-color: #f8d7da;\n      color: #721c24;\n    }\n\n    .status-on-leave {\n      background-color: #fff3cd;\n      color: #856404;\n    }\n\n    .pagination {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 1rem;\n      border-top: 1px solid #eee;\n    }\n\n    .page-numbers {\n      display: flex;\n      gap: 0.25rem;\n    }\n\n    .btn {\n      padding: 0.5rem 1rem;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9rem;\n      transition: background-color 0.3s;\n    }\n\n    .btn-primary {\n      background-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover:not(:disabled) {\n      background-color: #0056b3;\n    }\n\n    .btn-secondary {\n      background-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover:not(:disabled) {\n      background-color: #545b62;\n    }\n\n    .btn-danger {\n      background-color: #dc3545;\n      color: white;\n    }\n\n    .btn-danger:hover {\n      background-color: #c82333;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.8rem;\n    }\n\n    .btn-page {\n      background-color: #f8f9fa;\n      color: #495057;\n      border: 1px solid #dee2e6;\n      min-width: 40px;\n    }\n\n    .btn-page.active {\n      background-color: #007bff;\n      color: white;\n      border-color: #007bff;\n    }\n\n    .btn-page:hover:not(.active) {\n      background-color: #e9ecef;\n    }\n\n    .btn:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        flex-direction: column;\n      }\n\n      .search-controls {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .search-input {\n        min-width: auto;\n      }\n\n      .table-header, .table-row {\n        grid-template-columns: 1fr;\n        gap: 0.5rem;\n      }\n\n      .col-name::before { content: \"Name: \"; font-weight: bold; }\n      .col-email::before { content: \"Email: \"; font-weight: bold; }\n      .col-department::before { content: \"Department: \"; font-weight: bold; }\n      .col-position::before { content: \"Position: \"; font-weight: bold; }\n      .col-status::before { content: \"Status: \"; font-weight: bold; }\n      .col-actions::before { content: \"Actions: \"; font-weight: bold; }\n\n      .table-header {\n        display: none;\n      }\n\n      .table-row {\n        border: 1px solid #dee2e6;\n        margin-bottom: 1rem;\n        border-radius: 4px;\n        padding: 1rem;\n      }\n    }\n  `]\n})], EmployeesComponent);\nexport { EmployeesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}